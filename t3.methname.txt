sequence while
equals
set indicator
class name to canonical name
iterable stream with structure update
lift
show
showl
println
print
println
show
show
show
show
show
show
show
show
lift
hash
hash
hash
hash
hash
hash
hash
hash
hash
hash
soft memo
xmap
sum
sum
zero
multiply
sum right
sum right
sum left
sum left
join
dual
monoid def
monoid def
monoid def
monoid
monoid
monoid
function monoid
list monoid
first option monoid
last option monoid
stream monoid
array monoid
io monoid
set monoid
ord max monoid
sum
product
nullablefind first
visitor
nullable visitor
parse
bind
bind
bind
bind
bind
bind
bind
apply
repeat
parser
satisfy
character
character
characters
characters
digit
lower
upper
defined
high surrogate
identifier ignorable
iso control
java identifier part
java identifier start
alpha
alpha num
low surrogate
mirrored
space
title case
unicode identifer part
unicode identifer start
whitespace
map rest
map value
iterator
result
error
map
map
map
map
map
map
map
map
map
map
map
tree
zip tree
sum
sum
multiply 1p
sum nel
sum stream
dual
lift
xmap
semigroup def
semigroup def
semigroup
first semigroup
last semigroup
non empty list semigroup
semigroup
compare
eq
contramap
is less than
is less than or equal to
is greater than
is less than
is greater than
max
ord
ord def
ord def
ord
ord
ord
comparable ord
hash ord
hash equals ord
iterator
node
node
node
flatten
levels
fmap
fold map
to collection
bottom up
empty
iterable tree map
get
set
delete
size
is empty
values
keys
contains
iterator
to mutable map
from mutable map
update
update
split
tree map
split lookup
map
min
min key
max
max key
union
union
dlist
run
to java list
nil
single
cons
snoc
append
iterator
hash map
hash map
hash map
hash map
eq
hash
get
clear
contains
keys
values
is empty
size
set
delete
get delete
to collection
iterable hash map
zipper
zipper
ord
eq
show
map
fold right
from stream
from stream end
next
try next
previous
try previous
insert left
insert right
delete left
delete right
at start
at end
cobind
zip with focus
move
find
index
cycle next
cycle previous
delete left cycle
delete right cycle
to stream
iterator
single
iterable seq
cons
snoc
head
last
tail
init
to stream
to list
to java list
iterator
append
is empty
insert
is not empty
length
split
index
update
delete
take
drop
iterator
is fail
is success
fail
success
validation
success
success
or success
or success
on
foreach
foreach do effect
map
bind
sequence
filter
apply
forall
exists
to list
to option
to array
to stream
accumapply
accumulate
accumulate
accumulate
accumulate
accumulate
accumulate
accumulate
accumulate
accumulate
accumulate
accumulate
accumulate
accumulate
accumulate
iterator
sequence non cumulative
fail
or fail
on
foreach
foreach do effect
map
bind
filter
apply
forall
exists
to list
to option
to array
to stream
iterator
nel
validation
condition
parse byte
parse double
parse float
parse int
parse long
parse short
partition
iterator
id
id
match
match
measure
sum
zero
node measured
digit measured
single
deep
deep
one
two
three
four
node
node
node
node
match
wrap
bind
sequence
join
fold left
iterator
to standard list
left
right
priority queue
map
filter values
filter keys
is empty
top
enqueue
enqueue
contains
enqueue
enqueue
unqueue
dequeue
is less than
to list
empty
eof
el
cont
done
bind
length
drop
head
peek
list
iterator
match
to stream
range
empty
is empty
hamt
find
set
set
to stream
to list
to list
fold left on node
length
successor
predecessor
plus
plus
xmap
enumerator
enumerator
iterator
cons
snoc
length
append
append
fold right
fold right
fold left
map
bind
sublists
tails
map tails
intersperse
reverse
sort
zip
zip index
zip with
zip with
unzip
to list
to collection
nel
from list
join
iterator
to either
to list
map
filter
foreach
foreach do effect
fold right
fold left
scan left
scan left
scan right
scan right
bind
bind
apply
reverse
append
empty
mk array
single
join
forall
exists
find
range
zip with
as java list
to java list
array array
unzip
iterator
get
length
is empty
is not empty
to option
to either
to list
to stream
map
filter
foreach
fold right
fold left
bind
sequence
apply
reverse
append
to collection
iterator
hash set
hash set
hash set
eq
hash
empty
iterable hash set
contains
set
clear
is empty
size
delete
to list
to collection
iterator
tree zipper
eq
show
parent
root
left
right
first child
last child
get child
find child
from tree
from forest
is root
is first
is last
is leaf
modify tree
modify label
get label
insert left
insert right
insert down first
insert down last
insert down at
delete
map
positions
cobind
natural
natural
add
subtract
multiply
divide
mod
divmod
long value
float value
double value
int value
sequence
traverse
str
from stream
length
char at
sub sequence
to string eager
append
contains
ends with
starts with
head
tail
is empty
reverse
index of
index of
matches
split
unlines
unwords
eq
eq
eq
eq
add
add
add
cons
apply
zip with
iterator
to non empty list
to stream
map
iterator
map
apply
zip with
cons
iterator
to non empty list
to stream
map
apply
zip with
cons
iterator
to non empty list
to stream
map
apply
zip with
cons
iterator
to non empty list
to stream
map
apply
zip with
cons
iterator
to non empty list
to stream
map
apply
zip with
cons
iterator
to non empty list
to stream
map
apply
zip with
empty
member
insert
iterator
map
fold map
fold map right
to java hash set
to java tree set
to java list
to stream
to stream reverse
union
filter
intersect
minus
split
lookup
lookup
lookup
lookup
lookup
subset of
join
iterable set
eq
not eq
eq
contramap
equal
equal def
equal def
equal
equal
equal
equal
equal
equal
equal
equal
equal
equal
equal
equal
equal
equal
equal
list equal
set equal
equals
equals
on
join
strategy
par
merge all
par list
par map
par map
par flat map
par flat map
par list chunk
par zip with
par zip with
par module
map
map
map
par map
par map
par map
par map
par map
par zip with
par zip with
par zip with
par fold map
par extend
par extend
par extend
par extend
promise
to
join
bind
apply
bind
fold right
fold right
claim
claim
is fulfilled
sequence
queue actor
actor
actor
act
bind
sequence
from either
from option
normalise
driver manager
reader
writer
reader
writer
run
pure
suspend
arb unique queue
gen
map
foreach
foreach do effect
bind
bind
bind
bind
bind
bind
bind
bind
apply
resize
gen
parameterised
value
fail
arg
variant
prop
and
or
sequence
check
implies
prop
prop
check
check
check
main
passed
proven
falsified
exhausted
prop exception
gen exception
summary
summary ex
arb
arb lcg rng
arb invariant
arb invariant
arb invariant
arb invariant
arb invariant
arb invariant
arb invariant
arb invariant
arb either
arb validation
arb throwable
arb enum value
proven as unfalsified
add arg
no result
no result
unfalsified
falsified
proven
exception
choose
choose
choose
choose
shrink
shrink
